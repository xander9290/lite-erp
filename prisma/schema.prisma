generator client {
    provider = "prisma-client-js"
    output   = "../generate/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Partner {
    id          String @id @default(cuid())
    name        String
    displayName String @unique @map("display_name")

    // no requeridos
    email        String?
    phone        String?
    street       String?
    secondStreet String? @map("second_street")
    town         String?
    city         String?
    province     String?
    country      String?
    zip          Int?
    vat          String?

    // campos de modelo 
    state       String?
    displayType String  @default("internal") @map("display_type")
    active      Boolean @default(true)

    relatedUser User? @relation("RelatedUser")

    userId    String? @map("user_id")
    userAgent User?   @relation("UserAgent", fields: [userId], references: [id])

    createUid String? @map("create_uid")
    createBy  User?   @relation("CreateUidPartners", fields: [createUid], references: [id])

    imageId String? @unique @map("image_id")
    Image   Image?  @relation("EntityImage", fields: [imageId], references: [id])

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@index([name, displayName, phone])
    @@map("partners")
}

model User {
    id          String  @id @default(cuid())
    login       String  @unique
    password    String
    name        String? @unique
    displayName String  @unique @map("display_name")
    active      Boolean @default(true)

    // modelos creados
    createdPartners Partner[] @relation("CreateUidPartners")
    createdGroups   Group[]   @relation("CreateUidGroups")

    // modelos a cargo
    partenerLeads Partner[] @relation("UserAgent")

    partnerId String?  @unique
    partner   Partner? @relation("RelatedUser", fields: [partnerId], references: [id])

    // modelos relacionados
    groupId String? @map("group_id")
    group   Group?  @relation("RelatedGroup", fields: [groupId], references: [id])

    activity Activity[]

    // indicadores
    lastLogin DateTime? @map("last_login")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@index([displayName])
    @@map("users")
}

model Group {
    id          String @id @default(cuid())
    name        String @unique
    displayName String @unique @map("display_name")

    active Boolean @default(true)

    users User[] @relation("RelatedGroup")

    groupLines GroupLine[] @relation("GroupLines")

    createUid String? @map("create_uid")
    createBy  User?   @relation("CreateUidGroups", fields: [createUid], references: [id])

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@index([name, displayName])
    @@map("groups")
}

model GroupLine {
    id          String @id @default(cuid())
    name        String @unique
    displayName String @unique @map("display_name")

    groupId String? @map("group_id")
    Group   Group?  @relation("GroupLines", fields: [groupId], references: [id])

    createUid String? @map("create_uid")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@index([name, displayName])
    @@map("group_line")
}

model Image {
    id         String  @id @default(cuid())
    url        String
    publicId   String  @map("public_id")
    entityType String?

    Partner Partner? @relation("EntityImage")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@map("images")
}

model Activity {
    id     String @id @default(cuid())
    string String

    entityName String? @map("entity_name")
    entityId   String? @map("entity_id")

    userId   String? @map("user_id")
    createBy User?   @relation(fields: [userId], references: [id])

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@map("activity")
}

model Model {
    id          String  @id @default(cuid())
    name        String  @unique
    displayName String  @unique @map("display_name")
    active      Boolean @default(true)

    notCreate Boolean @default(false) @map("not_create")
    notEdit   Boolean @default(false) @map("not_edit")

    fieldLines ModelFieldLine[] @relation("RelatedModel")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@index([name, displayName])
    @@map("models")
}

model ModelFieldLine {
    id          String  @id @default(cuid())
    name        String  @unique
    displayName String  @unique @map("display_name")
    active      Boolean @default(true)

    readonly  Boolean @default(false)
    invisible Boolean @default(false)

    model   Model?  @relation("RelatedModel", fields: [modelId], references: [id])
    modelId String? @map("model_id")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@index([name, displayName])
    @@map("model_field_line")
}
